/*
Copyright 2023 mark.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/mark8s/fastdeploy/pkg/apis/fastdeploy/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FastDeployLister helps list FastDeploys.
// All objects returned here must be treated as read-only.
type FastDeployLister interface {
	// List lists all FastDeploys in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.FastDeploy, err error)
	// FastDeploys returns an object that can list and get FastDeploys.
	FastDeploys(namespace string) FastDeployNamespaceLister
	FastDeployListerExpansion
}

// fastDeployLister implements the FastDeployLister interface.
type fastDeployLister struct {
	indexer cache.Indexer
}

// NewFastDeployLister returns a new FastDeployLister.
func NewFastDeployLister(indexer cache.Indexer) FastDeployLister {
	return &fastDeployLister{indexer: indexer}
}

// List lists all FastDeploys in the indexer.
func (s *fastDeployLister) List(selector labels.Selector) (ret []*v1.FastDeploy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.FastDeploy))
	})
	return ret, err
}

// FastDeploys returns an object that can list and get FastDeploys.
func (s *fastDeployLister) FastDeploys(namespace string) FastDeployNamespaceLister {
	return fastDeployNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FastDeployNamespaceLister helps list and get FastDeploys.
// All objects returned here must be treated as read-only.
type FastDeployNamespaceLister interface {
	// List lists all FastDeploys in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.FastDeploy, err error)
	// Get retrieves the FastDeploy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.FastDeploy, error)
	FastDeployNamespaceListerExpansion
}

// fastDeployNamespaceLister implements the FastDeployNamespaceLister
// interface.
type fastDeployNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FastDeploys in the indexer for a given namespace.
func (s fastDeployNamespaceLister) List(selector labels.Selector) (ret []*v1.FastDeploy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.FastDeploy))
	})
	return ret, err
}

// Get retrieves the FastDeploy from the indexer for a given namespace and name.
func (s fastDeployNamespaceLister) Get(name string) (*v1.FastDeploy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("fastdeploy"), name)
	}
	return obj.(*v1.FastDeploy), nil
}
